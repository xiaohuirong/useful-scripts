#!/bin/bash

#set -v
show_help() {
	echo "Usage: $0 -e <esp> -r <root> -w <work_dir> [-u <user_name>] [-p <user_passwd>] [-H <host_name>] [--swap=<SIZE|off>] <profile_dir>"
	echo "  options:"
    echo "  -e <esp partition>        Set the esp partition to install grub"
    echo "  -r <root partition>       Set the root partition to install grub"
    echo "  -u <user_name>            Set your user name (default arch)"
    echo "  -p <user_passwd>          Set your user passwd (default 123456)"
    echo "  -H <host name>            Set your host name (default archcom)"
	echo "  -w <work_dir>             Set the working directory"
    echo "  --swap=SIZE|off           Set swap size or disable swap (default 512M)"
	echo "  -h                        Show this help message"
	echo "  <profile_dir>             Custom profile directory"
    echo -e "\nExample:"
    echo "  $0 -e /dev/sda1 -r /dev/sda5 -w . -u arch -p 123456 -H archcom --swap=512M /usr/share/archiso/configs/hoream"
}

swap_size=512M
user=arch
passwd=123456
host=archcomp

while getopts ":e:r:u:p:H:w:h-:" opt; do
	case $opt in
	e)
		esp="$OPTARG"
		;;
	r)
		root="$OPTARG"
		;;
	u)
		user="$OPTARG"
		;;
	p)
		passwd="$OPTARG"
		;;
	H)
		host="$OPTARG"
		;;
	w)
		work_dir="$OPTARG"
		;;
	s)
		img_size="$OPTARG"
		;;
	h)
		show_help
		exit 0
		;;
    -)
        case "$OPTARG" in
            help)
                show_help
                exit 0
                ;;
            swap=*)
                swap_option="${OPTARG#*=}"
                if [ "$swap_option" != "off" ]; then
                  swap_size="$swap_option"
                else
                  swap_size="off"
                fi
                ;;
            esp=*)
                esp_size="${OPTARG#*=}"
                ;;
            *)
                echo "Unvalid option: --$OPTARG" >&2
                show_help
                exit 1
                ;;
        esac
        ;;
	\?)
		echo "Unvalid option: -$OPTARG" >&2
		show_help
		exit 1
		;;
	:)
		echo "-$OPTARG need argument." >&2
		show_help
		exit 1
		;;
	esac
done

shift $((OPTIND - 1))
profile_dir="$1"

if [ -z "$esp" ] || [ -z "$root" ] || [ -z "$work_dir" ] || [ -z "$profile_dir" ]; then
	show_help
    exit
fi

if [ ! -e "$esp" ]; then
    echo "Esp partition doesn't exist"
    exit 1
elif [ ! -e "$root" ]; then
    echo "Root partition doesn't exist"
    exit 1
elif [ ! -e "$work_dir" ]; then
    echo "Working directory doesn't exist"
    exit 1
elif [ ! -e "$profile_dir" ]; then
    echo "Profile directory doesn't exist"
    exit 1
fi

esp_id=$(blkid "$esp")
if ! echo "$esp_id" | grep -q 'TYPE="vfat"' || ! echo "$esp_id" | grep -q 'PARTLABEL="EFI system partition"'; then
    echo "Partition $esp is not a valid esp partition"
    echo "$esp_id"
    exit 1
fi

root_id=$(blkid "$root")
if [ -n "$root_id" ]; then
    echo "Root partition $root has a filesystem."
    echo "$root_id"
    exit 1
fi

work_dir=$(readlink -f "$work_dir")
profile_dir=$(readlink -f "$profile_dir")

root_mountpoint="$work_dir/arch"
esp_mountpoint="$root_mountpoint/boot/esp"
swap_mountpoint="$root_mountpoint/swap"

handle_error() {
	echo "Something error."
	sudo umount -R $root_mountpoint
    exit 1
}
trap 'handle_error' ERR

mkdir -p "$root_mountpoint" >/dev/null

sudo mkfs.btrfs -L ROOT $root

sudo mount -o compress=zstd "$root" "$root_mountpoint"
sudo btrfs subvolume create "$root_mountpoint/@"

if [ "$swap_size" != "off" ]; then
    sudo btrfs subvolume create "$root_mountpoint/@swap"
    sudo chattr +C "$root_mountpoint/@swap"
    sudo chmod 0700 "$root_mountpoint/@swap"
    sudo fallocate -l "$swap_size" "$root_mountpoint/@swap/swapfile"
    sudo chmod 0600 "$root_mountpoint/@swap/swapfile"
    sudo mkswap "$root_mountpoint/@swap/swapfile"
fi

sudo umount "$root_mountpoint"
sudo mount -o compress=zstd,subvol=@ $root "$root_mountpoint"

sudo mkdir -p "$esp_mountpoint"
sudo mount $esp "$esp_mountpoint"
if [ "$swap_size" != "off" ]; then
    sudo mkdir -p "$swap_mountpoint"
    sudo mount -o subvol=@swap $root "$swap_mountpoint"
fi

mapfile -t packages < <(sed '/^[[:blank:]]*#.*/d;s/#.*//;/^[[:blank:]]*$/d' "$profile_dir/qemu_packages")
sudo pacstrap -C $profile_dir/pacman.conf $root_mountpoint ${packages[@]}

sudo genfstab -U "$root_mountpoint" >"$work_dir/fstab"
if [ "$swap_size" != "off" ]; then
    sudo sed -i '10,$d' "$work_dir/fstab"
    sudo echo "/swap/swapfile none swap sw 0 0" >>"$work_dir/fstab"
else
    sudo sed -i '6,$d' "$work_dir/fstab"
fi
sudo mv "$work_dir/fstab" "$root_mountpoint/etc"


etc_profile="$profile_dir/airootfs/etc"
sudo rsync -av \
    --exclude="skel" \
    --exclude="motd" \
    --exclude="hostname" \
    --exclude="passwd" \
    --exclude="shadow" \
    --exclude="group" \
    --exclude="gshadow" \
    --exclude="resolv.conf" \
    --exclude="pacman.d/hooks" \
    --exclude="sudoers" \
    --exclude="systemd" \
    --exclude="mkinitcpio.d" \
    --exclude="mkinitcpio.conf.d" \
    --exclude="modprobe.d" \
    --exclude="ssh" \
    --chown=root:root \
    "$etc_profile/" "$root_mountpoint/etc/"

sudo grub-install --target=x86_64-efi --removable --efi-directory=$esp_mountpoint --boot-directory=$root_mountpoint/boot
sudo grub-install --target=x86_64-efi --bootloader-id=GRUB --efi-directory=$esp_mountpoint --boot-directory=$root_mountpoint/boot

sudo arch-chroot "$root_mountpoint" /bin/bash <<EOL
#set -v

#pacman -Syu --noconfirm
systemctl enable NetworkManager sshd

ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
hwclock --systohc
echo -e 'en_US.UTF-8 UTF-8\nzh_CN.UTF-8 UTF-8' >> /etc/locale.gen
locale-gen

echo LANG=en_US.UTF-8 > /etc/locale.conf
echo -e '$host' >> /etc/hostname

echo -e '127.0.0.1  localhost\n::1  localhost' >> /etc/hosts

chsh -s /usr/bin/zsh
useradd -m -G wheel -s /bin/zsh "${user}"
chown "${user}:${user}" "/home/${user}"
echo -e "${passwd}\n${passwd}" | passwd
echo -e "${passwd}\n${passwd}" | passwd "${user}"
echo "${user} ALL=(ALL) NOPASSWD: ALL" > "/etc/sudoers.d/${user}"

## Setup grub
sudo pacman -S os-prober --noconfirm
echo 'GRUB_THEME="/usr/share/grub/themes/vimix-color-2k/theme.txt"' >> /etc/default/grub
sed -i 's/#GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/g' /etc/default/grub

grub-mkconfig -o /boot/grub/grub.cfg

sudo pacman -S totalmapper-git --noconfirm
totalmapper add_systemd_service --layout-file /etc/keyboard-layout.conf

cp -a /boot/{initramfs-linux-fallback.img,initramfs-linux.img}

EOL

home_profile="$profile_dir/airootfs/etc/skel"
root_profile="$profile_dir/airootfs/root"
cp "$home_profile/." "$root_mountpoint/home/$user" -r
sudo cp "$root_profile/." "$root_mountpoint/root" -r


sudo umount "$esp_mountpoint"
if [ "$swap_size" != "off" ]; then
    sudo umount "$swap_mountpoint"
fi
sudo umount "$root_mountpoint"
rmdir "$root_mountpoint"

echo "----------Successfully install-------------------"
